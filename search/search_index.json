{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"k8s-image-swapper Mirror images into your own registry and swap image references automatically. k8s-image-swapper is a mutating webhook for Kubernetes, downloading images into your own registry and pointing the images to that new location. It is an alternative to a docker pull-through proxy . The feature set was primarily designed with Amazon ECR in mind but may work with other registries. Benefits \u00b6 Using k8s-image-swapper will improve the overall availability, reliability, durability and resiliency of your Kubernetes cluster by keeping 3 rd -party images mirrored into your own registry. k8s-image-swapper will transparently consolidate all images into a single registry without the need to adjust manifests therefore reducing the impact of external registry failures, rate limiting, network issues, change or removal of images while reducing data traffic and therefore cost. TL;DR: Protect against: external registry failure ( quay.io outage ) image pull rate limiting ( docker.io rate limits ) accidental image changes removal of images Use in air-gaped environments without the need to change manifests Reduce NAT ingress traffic/cost","title":"Home"},{"location":"index.html#benefits","text":"Using k8s-image-swapper will improve the overall availability, reliability, durability and resiliency of your Kubernetes cluster by keeping 3 rd -party images mirrored into your own registry. k8s-image-swapper will transparently consolidate all images into a single registry without the need to adjust manifests therefore reducing the impact of external registry failures, rate limiting, network issues, change or removal of images while reducing data traffic and therefore cost. TL;DR: Protect against: external registry failure ( quay.io outage ) image pull rate limiting ( docker.io rate limits ) accidental image changes removal of images Use in air-gaped environments without the need to change manifests Reduce NAT ingress traffic/cost","title":"Benefits"},{"location":"getting-started.html","text":"Getting started \u00b6 This document will provide guidance for installing k8s-image-swapper . Prerequisites \u00b6 k8s-image-swapper will automatically create image repositories and download images. This requires certain permissions for your target registry ( only AWS ECR supported atm ). Before you get started choose a namespace to install k8s-image-swapper in, e.g. operations or k8s-image-swapper . Ensure the namespace exists and is configured as your current context 1 . All examples below will omit the namespace. AWS ECR with IAM credentials \u00b6 Create an IAM user (e.g. k8s-image-swapper ) with permissions 2 to create ECR repositories and upload container images. An IAM policy example can be found in the footnotes 2 . Create a Kubernetes secret (e.g. k8s-image-swapper-aws ) containing the IAM credentials you just obtained, e.g. kubectl create secret generic k8s-image-swapper-aws \\ --from-literal = aws_access_key_id = <...> \\ --from-literal = aws_secret_access_key = <...> AWS ECR with Service Account \u00b6 TBD Helm \u00b6 helm repo add estahn https://estahn.github.io/charts/ helm repo update helm install k8s-image-swapper estahn/k8s-image-swapper \\ --set config.target.registry.aws.accountId=$AWS_ACCOUNT_ID \\ --set config.target.registry.aws.region=$AWS_DEFAULT_REGION \\ --set awsSecretName=k8s-image-swapper-aws Use a tool like kubectx & kubens for simplicity. \u21a9 IAM Policy { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ecr:GetAuthorizationToken\" , \"ecr:DescribeRepositories\" , \"ecr:DescribeRegistry\" ], \"Resource\" : \"*\" }, { \"Sid\" : \"\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ecr:UploadLayerPart\" , \"ecr:PutImage\" , \"ecr:ListImages\" , \"ecr:InitiateLayerUpload\" , \"ecr:GetDownloadUrlForLayer\" , \"ecr:CreateRepository\" , \"ecr:CompleteLayerUpload\" , \"ecr:BatchGetImage\" , \"ecr:BatchCheckLayerAvailability\" ], \"Resource\" : \"arn:aws:ecr:*:123456789:repository/*\" } ] } Further restricting access The resource configuration allows access to all AWS ECR repositories within the account 123456789. Restrict this further by repository name or tag. k8s-image-swapper will create repositories with the source registry as prefix, e.g. nginx \u2192 docker.io/library/nginx:latest . \u21a9 \u21a9","title":"Getting started"},{"location":"getting-started.html#getting-started","text":"This document will provide guidance for installing k8s-image-swapper .","title":"Getting started"},{"location":"getting-started.html#prerequisites","text":"k8s-image-swapper will automatically create image repositories and download images. This requires certain permissions for your target registry ( only AWS ECR supported atm ). Before you get started choose a namespace to install k8s-image-swapper in, e.g. operations or k8s-image-swapper . Ensure the namespace exists and is configured as your current context 1 . All examples below will omit the namespace.","title":"Prerequisites"},{"location":"getting-started.html#aws-ecr-with-iam-credentials","text":"Create an IAM user (e.g. k8s-image-swapper ) with permissions 2 to create ECR repositories and upload container images. An IAM policy example can be found in the footnotes 2 . Create a Kubernetes secret (e.g. k8s-image-swapper-aws ) containing the IAM credentials you just obtained, e.g. kubectl create secret generic k8s-image-swapper-aws \\ --from-literal = aws_access_key_id = <...> \\ --from-literal = aws_secret_access_key = <...>","title":"AWS ECR with IAM credentials"},{"location":"getting-started.html#aws-ecr-with-service-account","text":"TBD","title":"AWS ECR with Service Account"},{"location":"getting-started.html#helm","text":"helm repo add estahn https://estahn.github.io/charts/ helm repo update helm install k8s-image-swapper estahn/k8s-image-swapper \\ --set config.target.registry.aws.accountId=$AWS_ACCOUNT_ID \\ --set config.target.registry.aws.region=$AWS_DEFAULT_REGION \\ --set awsSecretName=k8s-image-swapper-aws Use a tool like kubectx & kubens for simplicity. \u21a9 IAM Policy { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ecr:GetAuthorizationToken\" , \"ecr:DescribeRepositories\" , \"ecr:DescribeRegistry\" ], \"Resource\" : \"*\" }, { \"Sid\" : \"\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ecr:UploadLayerPart\" , \"ecr:PutImage\" , \"ecr:ListImages\" , \"ecr:InitiateLayerUpload\" , \"ecr:GetDownloadUrlForLayer\" , \"ecr:CreateRepository\" , \"ecr:CompleteLayerUpload\" , \"ecr:BatchGetImage\" , \"ecr:BatchCheckLayerAvailability\" ], \"Resource\" : \"arn:aws:ecr:*:123456789:repository/*\" } ] } Further restricting access The resource configuration allows access to all AWS ECR repositories within the account 123456789. Restrict this further by repository name or tag. k8s-image-swapper will create repositories with the source registry as prefix, e.g. nginx \u2192 docker.io/library/nginx:latest . \u21a9 \u21a9","title":"Helm"}]}